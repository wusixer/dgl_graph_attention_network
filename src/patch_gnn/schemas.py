"""Data validation schemas."""

from pandera import Check, Column, DataFrameSchema, Index, PandasDtype

ghesquire_processed_schema = DataFrameSchema(
    columns={
        "accession": Column(
            pandas_dtype=PandasDtype.String,
            checks=None,
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "Description": Column(
            pandas_dtype=PandasDtype.String,
            checks=None,
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "sequence": Column(
            pandas_dtype=PandasDtype.String,
            checks=None,
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "isoforms": Column(
            pandas_dtype=PandasDtype.String,
            checks=None,
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "end": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=6.0),
                Check.less_than_or_equal_to(max_value=5766.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "score": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=23.0),
                Check.less_than_or_equal_to(max_value=163.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "threshold": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=13.0),
                Check.less_than_or_equal_to(max_value=36.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "m/z": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=348.5153),
                Check.less_than_or_equal_to(max_value=1359.6875),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "z": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=2.0),
                Check.less_than_or_equal_to(max_value=4.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "ppm": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                Check.less_than_or_equal_to(max_value=794.2904701816567),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "%ox_fwd": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=None,
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "val_fwd": Column(
            pandas_dtype=PandasDtype.String,
            checks=None,
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "%ox_rev": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=None,
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "val_rev": Column(
            pandas_dtype=PandasDtype.String,
            checks=None,
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
    },
    index=Index(
        pandas_dtype=PandasDtype.Int64,
        checks=[
            Check.greater_than_or_equal_to(min_value=0.0),
            Check.less_than_or_equal_to(max_value=2625.0),
        ],
        nullable=False,
        coerce=False,
        name=None,
    ),
    coerce=True,
    strict=False,
    name=None,
)
